<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-102</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Properties
control_type = "Button" // Dont Change!
_press = 0              // Variable Use in Script. Don't Change
_enter = 0              // Variable Use in Script. Don't Change
_enter_alpha = 0        // Variable Use in Script. Don't Change

// Owner
owner = noone           //can be a obj_Window or obj_Panel
x_owner = 0             //child x on owner
y_owner = 0             //child y on owner

// Text
text = "Window"
text_color = c_white
text_alpha = 0.5

// Font
font = fo_arial12       // Sets the font. Use -1 to set the default font (Arial 12).
font_halign = fa_left   // Sets the horizontal alignment. Choose one of: fa_left , fa_center , fa_right
font_valign = fa_top    // Sets the vertical alignment. Choose one of: fa_top , fa_middle , fa_bottom 

//


//
control_width  = sprite_width
control_height = sprite_height

// Set Font
draw_set_font(font)
draw_set_halign(font_halign)
draw_set_valign(font_valign)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Leave Effect
if (_enter == 1) exit;

_enter_alpha -= 0.05
if (_enter_alpha &lt; 0)
{
    _enter_alpha = 0
}
else
{
    alarm[1] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enter Effect
if (_enter == 0) exit;

_enter_alpha += 0.05
if (_enter_alpha &gt; 1)
{
    _enter_alpha = 1
}
else
{
    alarm[0] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check Enter or Leave
if (owner) 
{
    if !(owner.visible) exit;
}
if !(visible) exit;

if collision_point(mouse_x,mouse_y,id,0,0)
{
    _enter = 1
}
else
{
    _enter = 0
    if (_enter_alpha != 0) and (alarm[1] != 1)
    {
        alarm[1] = 1
    } 
}

if (_enter == 1)
{
    if mouse_check_button_pressed(mb_left)
    {
        _press = 1
    }
    if (_press == 1)
    {
        image_index = 2
        if !mouse_check_button(mb_left)
        {
            _press = 0
        }
    }
    else
    {
        if (_enter_alpha != 1) and (alarm[0] != 1) 
        {
            alarm[0] = 1
        }
    }
}
else
{
    image_index = 0
}
if mouse_check_button_released(mb_left)
{
    _press = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Click Event
if (_enter == 1) and (_press == 1) and (visible)
{
    if (owner) and !(owner.visible) exit;
    // Do Someting After Click
    obj_cur.target = obj_Window
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Skin and Text
if (owner)
{
    if !(owner.visible)
    {
        exit;
    }
    x = x_owner + owner.x
    y = y_owner + owner.y
}

// Update
control_width  = sprite_width
control_height = sprite_height

draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,0,c_white,image_alpha)                                 // Draw Default Sprite(Skin)
draw_sprite_ext(sprite_index,1,x,y,image_xscale,image_yscale,0,c_white,_enter_alpha)   // Draw Skin When Mouse Entered
if (_enter == 1) and (_press == 1)      // Check Clicked?
{
    //Enter_Alpha = 0
    draw_sprite_ext(sprite_index,2,x,y,image_xscale,image_yscale,0,c_white,image_alpha)    // Draw Sprite(Skin) When Mouse Clicked
}

// Check Variable Text and Draw in Center of Sprite
if (text != "")
{
    draw_set_font(font)
    draw_set_halign(font_halign)
    draw_set_valign(font_valign)
    draw_text_color(x+(sprite_width/2)-(string_width(text)/2),y+(sprite_height/2)-(string_height(text)/2),text,text_color,text_color,text_color,text_color,text_alpha)
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>60,60</point>
  </PhysicsShapePoints>
</object>
