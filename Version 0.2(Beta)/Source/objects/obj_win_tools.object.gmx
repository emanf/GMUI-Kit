<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_def</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Properties
control_type = "Window"          // Dont Change!
_drag = 0                        // Dont Change!
_x = 0                           // Dont Change!
_y = 0                           // Dont Change!

//
control_width  = sprite_width
control_height = sprite_height

// Definition of Drag Area(Rectangle x1 y1 width height)
drag_x = 0                      //x1
drag_y = 0                      //x2
drag_width = sprite_width       //width
drag_height = 30                //height

// Skin
skin_sprite = spr_sWindow                   // set noone to draw default sprite(sprite_index);
skin_back_color = make_color_rgb(25,25,25)  // set background color if u use skin.
skin_header_height = drag_height            // set header height to window
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Example Childs
exit

ID = instance_create(0,0,obj_Button)
ID.owner = id
ID.x_owner = 30
ID.y_owner = 40
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drag me
if (!visible) exit
if (_drag)
{
    x = mouse_x - _x
    y = mouse_y - _y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drop me
_drag = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check is Drag Area
if (!visible) exit
if (drag_x &lt; mouse_x - x) and (drag_y &lt; mouse_y - y) and (drag_width &gt; mouse_x - x) and (drag_height &gt; mouse_y - y)
{
    _drag = 1
    _x = mouse_x - x
    _y = mouse_y - y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
// Update
control_width  = sprite_width
control_height = sprite_height

if (skin_sprite)
{
    __w  = sprite_get_width(skin_sprite)/3
    __h  = sprite_get_height(skin_sprite)/3
    _xs  = (sprite_width -(2*__w)+1) / __w
    _ys  = (sprite_height-(2*__h)+1) / __h
    _xsh = (sprite_width -(2*__w)+1) / __w
    _ysh = (skin_header_height-__h)/__h
    
    // Draw Background Color
    _c = draw_get_color()
    draw_set_color(skin_back_color)
    draw_rectangle(x+__w,y+__h,x+sprite_width-(__w),y+sprite_height-(__h),false)
    draw_set_color(_c)
    
    // Draw Top Border
    draw_sprite_part_ext(skin_sprite,0,__w,0,__w,__h,x+__w,y,_xs,1,c_white,1)
    
    // Draw Bottom Border
    draw_sprite_part_ext(skin_sprite,0,__w,__h*2,__w,__h,x+__w,y+sprite_height-__h+1,_xs,1,c_white,1)
    
    // Draw Left Border
    draw_sprite_part_ext(skin_sprite,0,0,__h,__w,__h,x,y+__h,1,_ys,c_white,1)
    
    // Draw Right Border
    draw_sprite_part_ext(skin_sprite,0,__w*2,__h,__w,__h,x+sprite_width-__w+1,y+__h,1,_ys,c_white,1)
    
    // Draw Header of Window
    draw_sprite_part_ext(skin_sprite,0,__w,__h,__w,__w,x+__w,y+__h,_xsh,_ysh,c_white,1)
    
    // Draw Corners of Window
    draw_sprite_part_ext(skin_sprite,0,0,0,__w,__h,x,y,1,1,c_white,1)
    draw_sprite_part_ext(skin_sprite,0,0,__h*2,__w,__h,x,y+sprite_height-__h+1,1,1,c_white,1)
    draw_sprite_part_ext(skin_sprite,0,__w*2,0,__w,__h,x+sprite_width-__w+1,y,1,1,c_white,1)
    draw_sprite_part_ext(skin_sprite,0,__w*2,__h*2,__w,__h,x+sprite_width-__w+1,y+sprite_height-__h+1,1,1,c_white,1)
}
else
{
    draw_self()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>184,184</point>
  </PhysicsShapePoints>
</object>
